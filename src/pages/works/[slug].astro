---
import { Image } from 'astro:assets';
import NoImage from '@assets/no-image_large.svg';
import LinkButton from '@components/UI/LinkButton.svelte';
import Layout from '@layouts/Layout.astro';
import { getAllWorks, getWork } from '@library/useCms';

export const getStaticPaths = async () => {
  const works = await getAllWorks();
  if (!works) return;
  return works.map((content) => ({
    params: {
      slug: content.slug,
    },
  }));
};

const { slug } = Astro.params;
const work = slug && (await getWork(slug));
---

<Layout
  title={`${work ? work.title : ''}`}
  description={`${work ? work.title : ''}の詳細ページ`}
  currentPage="works"
>
  {
    work && (
      <div class="">
        <h1 class="text-text-secondary text-3xl font-bold md:text-4xl">
          {work.title}
        </h1>

        <div class="mt-12 flex gap-10 pl-4">
          <div class="font-barlow-semi flex flex-col gap-2 font-semibold">
            <h3 class="text-text-secondary before:bg-bg-accent-secondary relative text-xl tracking-wide before:absolute before:-left-3.5 before:top-[0.72rem] before:block before:h-2 before:w-2 before:rounded-full">
              date
            </h3>
            <time
              datetime={work.date}
              class="text-md bg-bg-primary rounded-md px-2 py-0.5 tracking-wide"
            >
              {new Date(work.date).toLocaleDateString('en-US', {
                month: 'short',
                year: 'numeric',
              })}
            </time>
          </div>

          <div class="font-barlow-semi flex flex-col gap-2 font-semibold">
            <h3 class="text-text-secondary before:bg-bg-accent-secondary relative text-xl tracking-wide before:absolute before:-left-3.5 before:top-[0.72rem] before:block before:h-2 before:w-2 before:rounded-full">
              category
            </h3>
            <ul class=" flex gap-2 ">
              {work.category.map((item) => {
                return (
                  <li class="text-md bg-bg-primary rounded-md px-2 py-0.5 tracking-wide">
                    {item}
                  </li>
                );
              })}
            </ul>
          </div>
        </div>

        <div class="border-border-primary mt-10 w-full overflow-hidden rounded-md border">
          {work.subImage ? (
            <Image
              src={decodeURIComponent(work.subImage.src)}
              width={work.subImage.width}
              height={work.subImage.height}
              alt={work.subImage.altText ? work.subImage.altText : ''}
            />
          ) : (
            <img
              src={NoImage.src}
              alt="no image"
              width={762}
              height={360}
              loading="lazy"
              decoding="async"
            />
          )}
        </div>

        <div class="mt-6 text-end">
          {work.link && (
            <LinkButton type="externalLink" href={work.link}>
              visit site
            </LinkButton>
          )}
        </div>

        <div class="mt-8 pl-4">
          <h3 class="text-text-quaternary before:bg-bg-accent-secondary relative text-lg font-bold before:absolute before:-left-4 before:top-[0.7rem] before:block before:h-2 before:w-2 before:rounded-full">
            技術スタック
          </h3>
          <p class="mt-2 leading-7">{work.architectures}</p>
        </div>

        <div class="mt-12 pl-4">
          <h3 class="text-text-quaternary before:bg-bg-accent-secondary relative text-lg font-bold before:absolute before:-left-4 before:top-[0.7rem] before:block before:h-2 before:w-2 before:rounded-full">
            制作物について
          </h3>
          <div class="mt-2 leading-7" set:html={work.content} />
        </div>
      </div>
    )
  }
</Layout>
